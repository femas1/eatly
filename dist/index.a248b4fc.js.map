{"mappings":"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","sources":["node_modules/toastify-js/src/toastify.js","src/index.js"],"sourcesContent":["/*!\n * Toastify js 1.12.0\n * https://github.com/apvarun/toastify-js\n * @license MIT licensed\n *\n * Copyright (C) 2018 Varun A P\n */\n(function(root, factory) {\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Toastify = factory();\n  }\n})(this, function(global) {\n  // Object initialization\n  var Toastify = function(options) {\n      // Returning a new init object\n      return new Toastify.lib.init(options);\n    },\n    // Library version\n    version = \"1.12.0\";\n\n  // Set the default global options\n  Toastify.defaults = {\n    oldestFirst: true,\n    text: \"Toastify is awesome!\",\n    node: undefined,\n    duration: 3000,\n    selector: undefined,\n    callback: function () {\n    },\n    destination: undefined,\n    newWindow: false,\n    close: false,\n    gravity: \"toastify-top\",\n    positionLeft: false,\n    position: '',\n    backgroundColor: '',\n    avatar: \"\",\n    className: \"\",\n    stopOnFocus: true,\n    onClick: function () {\n    },\n    offset: {x: 0, y: 0},\n    escapeMarkup: true,\n    ariaLive: 'polite',\n    style: {background: ''}\n  };\n\n  // Defining the prototype of the object\n  Toastify.lib = Toastify.prototype = {\n    toastify: version,\n\n    constructor: Toastify,\n\n    // Initializing the object with required parameters\n    init: function(options) {\n      // Verifying and validating the input object\n      if (!options) {\n        options = {};\n      }\n\n      // Creating the options object\n      this.options = {};\n\n      this.toastElement = null;\n\n      // Validating the options\n      this.options.text = options.text || Toastify.defaults.text; // Display message\n      this.options.node = options.node || Toastify.defaults.node;  // Display content as node\n      this.options.duration = options.duration === 0 ? 0 : options.duration || Toastify.defaults.duration; // Display duration\n      this.options.selector = options.selector || Toastify.defaults.selector; // Parent selector\n      this.options.callback = options.callback || Toastify.defaults.callback; // Callback after display\n      this.options.destination = options.destination || Toastify.defaults.destination; // On-click destination\n      this.options.newWindow = options.newWindow || Toastify.defaults.newWindow; // Open destination in new window\n      this.options.close = options.close || Toastify.defaults.close; // Show toast close icon\n      this.options.gravity = options.gravity === \"bottom\" ? \"toastify-bottom\" : Toastify.defaults.gravity; // toast position - top or bottom\n      this.options.positionLeft = options.positionLeft || Toastify.defaults.positionLeft; // toast position - left or right\n      this.options.position = options.position || Toastify.defaults.position; // toast position - left or right\n      this.options.backgroundColor = options.backgroundColor || Toastify.defaults.backgroundColor; // toast background color\n      this.options.avatar = options.avatar || Toastify.defaults.avatar; // img element src - url or a path\n      this.options.className = options.className || Toastify.defaults.className; // additional class names for the toast\n      this.options.stopOnFocus = options.stopOnFocus === undefined ? Toastify.defaults.stopOnFocus : options.stopOnFocus; // stop timeout on focus\n      this.options.onClick = options.onClick || Toastify.defaults.onClick; // Callback after click\n      this.options.offset = options.offset || Toastify.defaults.offset; // toast offset\n      this.options.escapeMarkup = options.escapeMarkup !== undefined ? options.escapeMarkup : Toastify.defaults.escapeMarkup;\n      this.options.ariaLive = options.ariaLive || Toastify.defaults.ariaLive;\n      this.options.style = options.style || Toastify.defaults.style;\n      if(options.backgroundColor) {\n        this.options.style.background = options.backgroundColor;\n      }\n\n      // Returning the current object for chaining functions\n      return this;\n    },\n\n    // Building the DOM element\n    buildToast: function() {\n      // Validating if the options are defined\n      if (!this.options) {\n        throw \"Toastify is not initialized\";\n      }\n\n      // Creating the DOM object\n      var divElement = document.createElement(\"div\");\n      divElement.className = \"toastify on \" + this.options.className;\n\n      // Positioning toast to left or right or center\n      if (!!this.options.position) {\n        divElement.className += \" toastify-\" + this.options.position;\n      } else {\n        // To be depreciated in further versions\n        if (this.options.positionLeft === true) {\n          divElement.className += \" toastify-left\";\n          console.warn('Property `positionLeft` will be depreciated in further versions. Please use `position` instead.')\n        } else {\n          // Default position\n          divElement.className += \" toastify-right\";\n        }\n      }\n\n      // Assigning gravity of element\n      divElement.className += \" \" + this.options.gravity;\n\n      if (this.options.backgroundColor) {\n        // This is being deprecated in favor of using the style HTML DOM property\n        console.warn('DEPRECATION NOTICE: \"backgroundColor\" is being deprecated. Please use the \"style.background\" property.');\n      }\n\n      // Loop through our style object and apply styles to divElement\n      for (var property in this.options.style) {\n        divElement.style[property] = this.options.style[property];\n      }\n\n      // Announce the toast to screen readers\n      if (this.options.ariaLive) {\n        divElement.setAttribute('aria-live', this.options.ariaLive)\n      }\n\n      // Adding the toast message/node\n      if (this.options.node && this.options.node.nodeType === Node.ELEMENT_NODE) {\n        // If we have a valid node, we insert it\n        divElement.appendChild(this.options.node)\n      } else {\n        if (this.options.escapeMarkup) {\n          divElement.innerText = this.options.text;\n        } else {\n          divElement.innerHTML = this.options.text;\n        }\n\n        if (this.options.avatar !== \"\") {\n          var avatarElement = document.createElement(\"img\");\n          avatarElement.src = this.options.avatar;\n\n          avatarElement.className = \"toastify-avatar\";\n\n          if (this.options.position == \"left\" || this.options.positionLeft === true) {\n            // Adding close icon on the left of content\n            divElement.appendChild(avatarElement);\n          } else {\n            // Adding close icon on the right of content\n            divElement.insertAdjacentElement(\"afterbegin\", avatarElement);\n          }\n        }\n      }\n\n      // Adding a close icon to the toast\n      if (this.options.close === true) {\n        // Create a span for close element\n        var closeElement = document.createElement(\"button\");\n        closeElement.type = \"button\";\n        closeElement.setAttribute(\"aria-label\", \"Close\");\n        closeElement.className = \"toast-close\";\n        closeElement.innerHTML = \"&#10006;\";\n\n        // Triggering the removal of toast from DOM on close click\n        closeElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.removeElement(this.toastElement);\n            window.clearTimeout(this.toastElement.timeOutValue);\n          }.bind(this)\n        );\n\n        //Calculating screen width\n        var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n        // Adding the close icon to the toast element\n        // Display on the right if screen width is less than or equal to 360px\n        if ((this.options.position == \"left\" || this.options.positionLeft === true) && width > 360) {\n          // Adding close icon on the left of content\n          divElement.insertAdjacentElement(\"afterbegin\", closeElement);\n        } else {\n          // Adding close icon on the right of content\n          divElement.appendChild(closeElement);\n        }\n      }\n\n      // Clear timeout while toast is focused\n      if (this.options.stopOnFocus && this.options.duration > 0) {\n        var self = this;\n        // stop countdown\n        divElement.addEventListener(\n          \"mouseover\",\n          function(event) {\n            window.clearTimeout(divElement.timeOutValue);\n          }\n        )\n        // add back the timeout\n        divElement.addEventListener(\n          \"mouseleave\",\n          function() {\n            divElement.timeOutValue = window.setTimeout(\n              function() {\n                // Remove the toast from DOM\n                self.removeElement(divElement);\n              },\n              self.options.duration\n            )\n          }\n        )\n      }\n\n      // Adding an on-click destination path\n      if (typeof this.options.destination !== \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            if (this.options.newWindow === true) {\n              window.open(this.options.destination, \"_blank\");\n            } else {\n              window.location = this.options.destination;\n            }\n          }.bind(this)\n        );\n      }\n\n      if (typeof this.options.onClick === \"function\" && typeof this.options.destination === \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.options.onClick();\n          }.bind(this)\n        );\n      }\n\n      // Adding offset\n      if(typeof this.options.offset === \"object\") {\n\n        var x = getAxisOffsetAValue(\"x\", this.options);\n        var y = getAxisOffsetAValue(\"y\", this.options);\n\n        var xOffset = this.options.position == \"left\" ? x : \"-\" + x;\n        var yOffset = this.options.gravity == \"toastify-top\" ? y : \"-\" + y;\n\n        divElement.style.transform = \"translate(\" + xOffset + \",\" + yOffset + \")\";\n\n      }\n\n      // Returning the generated element\n      return divElement;\n    },\n\n    // Displaying the toast\n    showToast: function() {\n      // Creating the DOM object for the toast\n      this.toastElement = this.buildToast();\n\n      // Getting the root element to with the toast needs to be added\n      var rootElement;\n      if (typeof this.options.selector === \"string\") {\n        rootElement = document.getElementById(this.options.selector);\n      } else if (this.options.selector instanceof HTMLElement || (typeof ShadowRoot !== 'undefined' && this.options.selector instanceof ShadowRoot)) {\n        rootElement = this.options.selector;\n      } else {\n        rootElement = document.body;\n      }\n\n      // Validating if root element is present in DOM\n      if (!rootElement) {\n        throw \"Root element is not defined\";\n      }\n\n      // Adding the DOM element\n      var elementToInsert = Toastify.defaults.oldestFirst ? rootElement.firstChild : rootElement.lastChild;\n      rootElement.insertBefore(this.toastElement, elementToInsert);\n\n      // Repositioning the toasts in case multiple toasts are present\n      Toastify.reposition();\n\n      if (this.options.duration > 0) {\n        this.toastElement.timeOutValue = window.setTimeout(\n          function() {\n            // Remove the toast from DOM\n            this.removeElement(this.toastElement);\n          }.bind(this),\n          this.options.duration\n        ); // Binding `this` for function invocation\n      }\n\n      // Supporting function chaining\n      return this;\n    },\n\n    hideToast: function() {\n      if (this.toastElement.timeOutValue) {\n        clearTimeout(this.toastElement.timeOutValue);\n      }\n      this.removeElement(this.toastElement);\n    },\n\n    // Removing the element from the DOM\n    removeElement: function(toastElement) {\n      // Hiding the element\n      // toastElement.classList.remove(\"on\");\n      toastElement.className = toastElement.className.replace(\" on\", \"\");\n\n      // Removing the element from DOM after transition end\n      window.setTimeout(\n        function() {\n          // remove options node if any\n          if (this.options.node && this.options.node.parentNode) {\n            this.options.node.parentNode.removeChild(this.options.node);\n          }\n\n          // Remove the element from the DOM, only when the parent node was not removed before.\n          if (toastElement.parentNode) {\n            toastElement.parentNode.removeChild(toastElement);\n          }\n\n          // Calling the callback function\n          this.options.callback.call(toastElement);\n\n          // Repositioning the toasts again\n          Toastify.reposition();\n        }.bind(this),\n        400\n      ); // Binding `this` for function invocation\n    },\n  };\n\n  // Positioning the toasts on the DOM\n  Toastify.reposition = function() {\n\n    // Top margins with gravity\n    var topLeftOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var topRightOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var offsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n\n    // Get all toast messages on the DOM\n    var allToasts = document.getElementsByClassName(\"toastify\");\n\n    var classUsed;\n\n    // Modifying the position of each toast element\n    for (var i = 0; i < allToasts.length; i++) {\n      // Getting the applied gravity\n      if (containsClass(allToasts[i], \"toastify-top\") === true) {\n        classUsed = \"toastify-top\";\n      } else {\n        classUsed = \"toastify-bottom\";\n      }\n\n      var height = allToasts[i].offsetHeight;\n      classUsed = classUsed.substr(9, classUsed.length-1)\n      // Spacing between toasts\n      var offset = 15;\n\n      var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n      // Show toast in center if screen with less than or equal to 360px\n      if (width <= 360) {\n        // Setting the position\n        allToasts[i].style[classUsed] = offsetSize[classUsed] + \"px\";\n\n        offsetSize[classUsed] += height + offset;\n      } else {\n        if (containsClass(allToasts[i], \"toastify-left\") === true) {\n          // Setting the position\n          allToasts[i].style[classUsed] = topLeftOffsetSize[classUsed] + \"px\";\n\n          topLeftOffsetSize[classUsed] += height + offset;\n        } else {\n          // Setting the position\n          allToasts[i].style[classUsed] = topRightOffsetSize[classUsed] + \"px\";\n\n          topRightOffsetSize[classUsed] += height + offset;\n        }\n      }\n    }\n\n    // Supporting function chaining\n    return this;\n  };\n\n  // Helper function to get offset.\n  function getAxisOffsetAValue(axis, options) {\n\n    if(options.offset[axis]) {\n      if(isNaN(options.offset[axis])) {\n        return options.offset[axis];\n      }\n      else {\n        return options.offset[axis] + 'px';\n      }\n    }\n\n    return '0px';\n\n  }\n\n  function containsClass(elem, yourClass) {\n    if (!elem || typeof yourClass !== \"string\") {\n      return false;\n    } else if (\n      elem.className &&\n      elem.className\n        .trim()\n        .split(/\\s+/gi)\n        .indexOf(yourClass) > -1\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Setting up the prototype for the init object\n  Toastify.lib.init.prototype = Toastify.lib;\n\n  // Returning the Toastify function to be assigned to the window object/module\n  return Toastify;\n});\n","'use strict';\r\n\r\nimport Toastify from 'toastify-js';\r\nimport \"toastify-js/src/toastify.css\";\r\n\r\n// require('dotenv').config();\r\n\r\n// const apiKey = process.env.API_KEY;\r\n\r\nconst recipeContainer = document.querySelector('.container__content__mainContent');\r\nconst recipePicture = document.getElementById('recipe-picture');\r\nconst ingredientContainer = document.querySelector('.container__content__mainContent__ingredients__list__item');\r\nconst previewPicture = document.getElementById('preview-picture');\r\nconst recipeTitle = document.querySelector('.container__content__sidebar__recipe__title');\r\nconst recipeDirections = document.querySelector('.container__content__mainContent__directions__text');\r\nconst cookingTime = document.querySelector('.container__content__mainContent__dishInfo__time span');\r\nconst recipeServings = document.querySelector('.container__content__mainContent__dishInfo__servings span');\r\nconst searchBtn = document.getElementById('submitButton');\r\nconst searchBarInput = document.getElementById('searchRecipe');\r\nconst sidebar = document.querySelector('.container__content__sidebar');\r\nconst saveRecipeBtn = document.querySelector('.container__header__buttons__addRecipe.btn');\r\nconst saveRecipeBtnInRecipe = document.querySelector('.fa-floppy-disk');\r\nconst savedRecipesBtn = document.querySelector('.container__header__buttons__savedRecipes.btn');\r\n\r\n// SAVE A RECIPE\r\n\r\n// 1. User clicks on save \r\n// 2. define current recipe (when clicking on recipe in sidebar --> save id somewhere in html)\r\n// 3. get the id from the html (from point 2)\r\n// 4. Get the current recipe id (getRecipeId --> calls api)\r\n// 5. and save it to localStorage\r\n\r\n// 1. Get ID from clicked recipe and push it to an Array 'tempId', where it is temporary stored\r\n\r\nlet tempId = [];\r\n\r\nsidebar.addEventListener('click', (e) => {\r\n        let recipeId = e.target.id;\r\n        let recipeTitle = e.target.innerText;\r\n        let recipeImage = e.target.firstElementChild.src;\r\n        tempId.push({\r\n            id: recipeId,\r\n            title: recipeTitle,\r\n            image: recipeImage\r\n        })\r\n        // console.log(tempId);\r\n    });\r\n\r\n// 2. When user clicks on save button, get the id from tempId array and push it to an array in localStorage (to avoid getting the wrong index, get alway the -1 index - last clicked recipe)\r\n\r\nlet savedRecipes = [];\r\n\r\nsaveRecipeBtn.addEventListener('click', (e)=> {\r\n    let lastClickedRecipe = tempId.slice(-1);\r\n    if(savedRecipes.some(recipe => recipe[0].id === lastClickedRecipe[0].id)){\r\n      alert(\"Recipe already saved.\")\r\n    } else {\r\n    savedRecipes.push(lastClickedRecipe);\r\n    // alert(\"Recipe successfully saved.\")\r\n    // SHOW TOAST NOTIFICATION \r\n    Toastify({\r\n        text: \"Recipe successfully saved.\",\r\n        duration: 5000,\r\n        destination: \"https://github.com/apvarun/toastify-js\",\r\n        newWindow: true,\r\n        close: true,\r\n        gravity: \"top\", \r\n        position: \"right\", \r\n        stopOnFocus: true, \r\n        style: {\r\n          background: \"linear-gradient(to right, #00b09b, #96c93d)\",\r\n        },\r\n        onClick: function(){} // Callback after click\r\n      }).showToast();\r\n    // TOAST NOTIFICATION END\r\n\r\n    // saveRecipeBtn.firstElementChild.classList = \"fa-regular fa-circle-check\"\r\n    // STORE RECIPES IN LOCAL STORAGE \r\n    let savedRecipesSerialized = JSON.stringify(savedRecipes);\r\n    localStorage.setItem('savedRecipes', savedRecipesSerialized);\r\n    console.log(`Your recipes: ${savedRecipesSerialized}`);\r\n    }\r\n})\r\n\r\n// GETTING MY RECIPES (STORED RECIPES)\r\n\r\n// 1. User clicks on btn \"my recipes\"\r\n// 2. Get recipe ids from local storage (getItem('keyName')) -> save recipe title too, push it into sidebar, when user click call api based on stored id, display using getrecipebyid function\r\n\r\n// PUT RECIPES INTO SIDEBAR FROM LOCALSTORAGE\r\n\r\nsavedRecipesBtn.addEventListener('click', () => {\r\n         // CONVERT STRING FROM LOCALSTORAGE TO ARRAY LIKE STRUCTURE\r\n    let localStorageRecipesDeserialized = JSON.parse(localStorage.getItem('savedRecipes'));\r\n    console.log(localStorageRecipesDeserialized);\r\n    sidebar.innerHTML = \"\";\r\n        // LOOPING OVER ARRAY AND CREATE A LIST OF STORED RECIPES AND PUSH INTO SIDEBAR\r\n    localStorageRecipesDeserialized.forEach(recipeArray => {\r\n           sidebar.insertAdjacentHTML('beforeend', `\r\n                <div class=\"container__content__sidebar__recipe\" id=\"${recipeArray[0].id}\">\r\n                    <img id=\"preview-picture\" src=\"${recipeArray[0].image}\" alt=\"${recipeArray[0].title}\">\r\n                        <h3 class=\"container__content__sidebar__recipe__title\">${recipeArray[0].title}</h3>\r\n                </div>`\r\n            )\r\n    })\r\n})\r\n\r\n\r\n// API RANDOM RECIPE CALL \r\n\r\nconst getRecipeId = async function (id) {\r\n    const res = await fetch(`https://api.spoonacular.com/recipes/${id}/information?apiKey=b69e38af682b4e7fa423de0c87c3e848`);\r\n    const data = await res.json();\r\n}\r\n\r\n\r\n\r\nconst getRandRecipe = async function () {\r\n    const res = await fetch(`https://api.spoonacular.com/recipes/random?apiKey=b69e38af682b4e7fa423de0c87c3e848`);\r\n    const data = await res.json();\r\n\r\n    const title = data.recipes[0].title;\r\n    const image = data.recipes[0].image;\r\n    const readyIn = data.recipes[0].readyInMinutes;\r\n    const servings = data.recipes[0].servings\r\n    const instructions = data.recipes[0].instructions;\r\n    const extIngredients = data.recipes[0].extendedIngredients;\r\n\r\n    recipeTitle.innerText = title;\r\n    previewPicture.src = image;\r\n\r\n    // recipeContainer.innerHTML = \"\"\r\n\r\n    recipeContainer.insertAdjacentHTML('afterbegin', `\r\n    <!-- MAIN CONTENT -->        \r\n        <div class=\"container__content__mainContent__dishPicture\">\r\n            <img id= \"recipe-picture\" src=\"${image}\" alt=\"recipe-picture\">\r\n        </div>\r\n        <!-- DISH INFORMATION  -->\r\n        <div class=\"container__content__mainContent__dishInfo\">\r\n            <div class=\"container__content__mainContent__dishInfo__time\">\r\n                <p>\r\n                    <i class=\"fa-regular fa-clock\"></i>\r\n                    <span>${readyIn}</span>minutes\r\n                </p>\r\n            </div>\r\n            <div class=\"container__content__mainContent__dishInfo__servings\">\r\n                <p>\r\n                    <i class=\"fa-solid fa-users\"></i> \r\n                    <span>${servings}</span>servings</p>\r\n                    <i class=\"fa-solid fa-plus\"></i>\r\n                    <i class=\"fa-solid fa-minus\"></i>\r\n            </div>\r\n            <div class=\"container__content__mainContent__dishInfo__saveBtn\">\r\n                <i class=\"fa-regular fa-floppy-disk\"></i>\r\n            </div>\r\n        </div>\r\n        <!-- DISH INFORMATION END -->\r\n        <div class=\"container__content__mainContent__title\">\r\n            <h1>${title}</h1>\r\n        </div>\r\n        \r\n        <!-- DIRECTIONS -->\r\n        <div class=\"container__content__mainContent__directions\">\r\n            <h1 class=\"container__content__mainContent__directions__heading\">Directions</h1>\r\n            <p class=\"container__content__mainContent__directions__text\">${instructions}</p>\r\n        </div>\r\n        <!-- DIRECTIONS END -->\r\n    `)\r\n}\r\n// getRandRecipe();\r\n\r\n// SCENARIO: User starts the app \r\n\r\n// 1. Page loads\r\n// 2. Show all recipes in the sidebar\r\n    // 2.1. search recipe based on random ingredient (random ingredient from array)\r\n    // 2.2. push first 10 results into the preview tabs in the sidebar (slice array, add link into search)\r\n// 3. User clicks on one of the recipe -> show recipe in main content area\r\n\r\n// 3. Open / show the first recipe of the list \r\n\r\n\r\nconst searchRecipes = async function (ingredient) {\r\n    try {\r\n    const res = await fetch(`https://api.spoonacular.com/recipes/findByIngredients?apiKey=b69e38af682b4e7fa423de0c87c3e848&ingredients=${ingredient}`);\r\n    const data = await res.json();\r\n    \r\n\r\n    if(!res.ok) throw new Error(`${data.message}`);\r\n\r\n    data.forEach(recipe => {\r\n\r\n        sidebar.insertAdjacentHTML('beforeend', `\r\n            <div class=\"container__content__sidebar__recipe\" id=\"${recipe.id}\">\r\n                <img id=\"preview-picture\" src=\"${recipe.image}\" alt=\"burrito\">\r\n                    <h3 class=\"container__content__sidebar__recipe__title\" id=\"${recipe.id}\">${recipe.title}</h3>\r\n            </div>`\r\n        )\r\n    })\r\n    } catch(err) {\r\n        alert(err);\r\n    }\r\n}\r\n\r\n// window.addEventListener('DOMContentLoaded', getRandRecipe(), searchRecipes())\r\n\r\n// SEARCH RECIPE BY ID\r\n\r\n// // // 1. clicked on recipe\r\n// // // 2. get the recipe title(outer text?)\r\n// // // 3. search the title (exact string) using complexSearch\r\n// // // 4. insert recipe in main area (like in getRandRecipe)\r\n\r\nconst getRecipeById = async function (id) {\r\n    const res = await fetch(`https://api.spoonacular.com/recipes/${id}/information?apiKey=b69e38af682b4e7fa423de0c87c3e848`);\r\n    const data = await res.json();\r\n\r\n    const title = data.title;\r\n    const image = data.image;\r\n    const readyIn = data.readyInMinutes;\r\n    const servings = data.servings\r\n    const instructions = data.instructions;\r\n    const extIngredients = data.extendedIngredients;\r\n\r\n    recipeContainer.innerHTML = \"\";\r\n\r\n        //    INSERT INGREDIENTS  \r\n\r\n        let ingredientList = [];\r\n\r\n        extIngredients.forEach(ingredient => {\r\n            ingredientList.push(`${ingredient.amount} ${ingredient.unit} ${ingredient.originalName}`)\r\n         }\r\n        )\r\n\r\n        let allIngredients = [...ingredientList]\r\n\r\n\r\n    recipeContainer.insertAdjacentHTML('afterbegin', `\r\n    <!-- MAIN CONTENT -->        \r\n        <div class=\"container__content__mainContent__dishPicture\">\r\n            <img id= \"recipe-picture\" src=\"${image}\" alt=\"recipe-picture\">\r\n        </div>\r\n        <!-- DISH INFORMATION  -->\r\n        <div class=\"container__content__mainContent__dishInfo\">\r\n            <div class=\"container__content__mainContent__dishInfo__time\">\r\n                <p>\r\n                    <i class=\"fa-regular fa-clock\"></i>\r\n                    <span>${readyIn}</span>minutes\r\n                </p>\r\n            </div>\r\n            <div class=\"container__content__mainContent__dishInfo__servings\">\r\n                <p>\r\n                    <i class=\"fa-solid fa-users\"></i> \r\n                    <span>${servings}</span>servings</p>\r\n                    <i class=\"fa-solid fa-plus\"></i>\r\n                    <i class=\"fa-solid fa-minus\"></i>\r\n            </div>\r\n            <div class=\"container__content__mainContent__dishInfo__saveBtn\">\r\n                <i class=\"fa-regular fa-floppy-disk\"></i>\r\n            </div>\r\n        </div>\r\n        <!-- DISH INFORMATION END -->\r\n        <div class=\"container__content__mainContent__title\">\r\n            <h1>${title}</h1>\r\n        </div>\r\n        <!-- INGREDIENTS -->\r\n\r\n            <div class=\"container__content__mainContent__ingredients\">\r\n            <h1 class=\"container__content__mainContent__ingredients__heading\">Ingredients</h1>\r\n            <ul class=\"container__content__mainContent__ingredients__list\">\r\n                <li class=\"container__content__mainContent__ingredients__list__item\">\r\n                        ${allIngredients}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    <!-- INGREDIENTS -->\r\n        <!-- DIRECTIONS -->\r\n        <div class=\"container__content__mainContent__directions\">\r\n            <h1 class=\"container__content__mainContent__directions__heading\">Directions</h1>\r\n            <p class=\"container__content__mainContent__directions__text\">${instructions}</p>\r\n        </div>\r\n        <!-- DIRECTIONS END -->\r\n    `)\r\n}\r\n\r\nsidebar.addEventListener('click', (e) => {\r\n    let recipeId = e.target.id;\r\n    getRecipeById(recipeId);\r\n    getRecipeId(recipeId);\r\n    console.log(e.target)\r\n});\r\n\r\n// BASIC SEARCH IN SEARCH BAR\r\n\r\n// 1. ADD error handling (eg. if the input is empty -> alert or notify user, a recipe at least three words should be entered)\r\n// 2. DRY: include repeated code inside of a function!\r\n\r\nsearchBarInput.addEventListener('keypress', (e) => {\r\n    if(e.key === \"Enter\") {\r\n        sidebar.innerHTML = \"\";\r\n        let query = searchBarInput.value;\r\n        searchRecipes(query);\r\n    }\r\n})\r\n\r\nsearchBtn.addEventListener('click', () => {\r\n    sidebar.innerHTML = \"\";\r\n    let query = searchBarInput.value;\r\n    searchRecipes(query);\r\n});"],"names":["root","factory","$e46560f007b189d3$exports","global","Toastify","options","lib","init","getAxisOffsetAValue","axis","offset","isNaN","containsClass","elem","yourClass","className","trim","split","indexOf","defaults","oldestFirst","text","node","undefined","duration","selector","callback","destination","newWindow","close","gravity","positionLeft","position","backgroundColor","avatar","stopOnFocus","onClick","x","y","escapeMarkup","ariaLive","style","background","prototype","toastify","constructor","this","toastElement","buildToast","divElement","document","createElement","property","console","warn","setAttribute","nodeType","Node","ELEMENT_NODE","appendChild","innerText","innerHTML","avatarElement","src","insertAdjacentElement","closeElement","type","addEventListener","event","stopPropagation","removeElement","window","clearTimeout","timeOutValue","bind","width","innerWidth","screen","self","setTimeout","open","location","xOffset","yOffset","transform","showToast","rootElement","getElementById","HTMLElement","ShadowRoot","body","elementToInsert","firstChild","lastChild","insertBefore","reposition","hideToast","replace","parentNode","removeChild","call","classUsed","topLeftOffsetSize","top","bottom","topRightOffsetSize","offsetSize","allToasts","getElementsByClassName","i","length","height","offsetHeight","substr","$35da740d59af89ba$var$recipeContainer","querySelector","$35da740d59af89ba$var$searchBtn","$35da740d59af89ba$var$searchBarInput","$35da740d59af89ba$var$sidebar","$35da740d59af89ba$var$saveRecipeBtn","$35da740d59af89ba$var$savedRecipesBtn","$35da740d59af89ba$var$tempId","e","recipeId","target","id","recipeTitle","recipeImage","firstElementChild","push","title","image","$35da740d59af89ba$var$savedRecipes","lastClickedRecipe","slice","some","recipe","alert","$parcel$interopDefault","savedRecipesSerialized","JSON","stringify","localStorage","setItem","log","localStorageRecipesDeserialized","parse","getItem","forEach","recipeArray","insertAdjacentHTML","$35da740d59af89ba$var$searchRecipes","async","ingredient","res","fetch","data","json","ok","Error","message","err"],"version":3,"file":"index.a248b4fc.js.map"}